//
// Generated file, do not edit! Created by nedtool 5.0 from src/veins/modules/messages/HelloMessage.msg.
//

#ifndef __HELLOMESSAGE_M_H
#define __HELLOMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/base/utils/Coord.h"
// }}

/**
 * Class generated from <tt>src/veins/modules/messages/HelloMessage.msg:25</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet HelloMessage
 * {
 *     int vehicleId;
 *     int messageId;
 *     simtime_t idleTime;
 *     double degree;
 *     double role;
 *     double averageSpeed;
 *     Coord gpsPosition;
 *     simtime_t creationTime;
 *     double qosValue;
 *     int clusterHeadId;
 * }
 * </pre>
 */
class HelloMessage : public ::omnetpp::cPacket
{
  protected:
    int vehicleId;
    int messageId;
    ::omnetpp::simtime_t idleTime;
    double degree;
    double role;
    double averageSpeed;
    Coord gpsPosition;
    ::omnetpp::simtime_t creationTime;
    double qosValue;
    int clusterHeadId;

  private:
    void copy(const HelloMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HelloMessage&);

  public:
    HelloMessage(const char *name=nullptr, int kind=0);
    HelloMessage(const HelloMessage& other);
    virtual ~HelloMessage();
    HelloMessage& operator=(const HelloMessage& other);
    virtual HelloMessage *dup() const {return new HelloMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getVehicleId() const;
    virtual void setVehicleId(int vehicleId);
    virtual int getMessageId() const;
    virtual void setMessageId(int messageId);
    virtual ::omnetpp::simtime_t getIdleTime() const;
    virtual void setIdleTime(::omnetpp::simtime_t idleTime);
    virtual double getDegree() const;
    virtual void setDegree(double degree);
    virtual double getRole() const;
    virtual void setRole(double role);
    virtual double getAverageSpeed() const;
    virtual void setAverageSpeed(double averageSpeed);
    virtual Coord& getGpsPosition();
    virtual const Coord& getGpsPosition() const {return const_cast<HelloMessage*>(this)->getGpsPosition();}
    virtual void setGpsPosition(const Coord& gpsPosition);
    virtual ::omnetpp::simtime_t getCreationTime() const;
    virtual void setCreationTime(::omnetpp::simtime_t creationTime);
    virtual double getQosValue() const;
    virtual void setQosValue(double qosValue);
    virtual int getClusterHeadId() const;
    virtual void setClusterHeadId(int clusterHeadId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HelloMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HelloMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __HELLOMESSAGE_M_H

